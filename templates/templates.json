{
        "2d-arcade": {
          "index.html": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>{{gameName}}</title>\n    <style>\n        body { margin: 0; padding: 0; overflow: hidden; background: #000; }\n        #unity-container { width: 100%; height: 100vh; }\n        #loading-screen { position: absolute; top: 0; left: 0; width: 100%; height: 100%; background: #1a1a2e; display: flex; justify-content: center; align-items: center; color: #fff; }\n    </style>\n</head>\n<body>\n    <div id=\"loading-screen\">Loading {{gameName}}...</div>\n    <div id=\"unity-container\"></div>\n    <script src=\"Build/UnityLoader.js\"></script>\n    <script>\n        UnityLoader.instantiate(\"unity-container\", \"Build/{{gameName}}.json\", {\n            onProgress: (gameInstance, progress) => {\n                if (progress === 1) document.getElementById(\"loading-screen\").style.display = \"none\";\n            }\n        });\n    </script>\n</body>\n</html>",
          "Scenes/GameScene.unity": "scene: {\n  objects: [\n    { name: \"MainCamera\", components: [ { type: \"Camera\", orthographic: true, size: 10 } ] },\n    { name: \"GameManager\", components: [ { type: \"GameManager\" }, { type: \"GameConfig\" } ] },\n    { name: \"Snake\", components: [ { type: \"SpriteRenderer\" }, { type: \"Animator\", parameters: [ { name: \"Direction\", type: \"int\" }, { name: \"IsEating\", type: \"bool\" } ] }, { type: \"PlayerController\" }, { type: \"BoxCollider2D\", isTrigger: true } ] },\n    { name: \"Food\", components: [ { type: \"SpriteRenderer\" }, { type: \"Animator\", parameters: [ { name: \"Pulsing\", type: \"bool\" } ] }, { type: \"EnemyController\" }, { type: \"BoxCollider2D\", isTrigger: true } ] },\n    { name: \"UIManager\", components: [ { type: \"UIManager\" } ] },\n    { name: \"AudioManager\", components: [ { type: \"AudioManager\" } ] },\n    { name: \"CameraController\", components: [ { type: \"CameraController\" } ] }\n  ]\n}",
          "Scripts/UIManager.cs": "using UnityEngine;\nusing UnityEngine.UI;\n\npublic class UIManager : MonoBehaviour\n{\n    public Text scoreText;\n    public GameObject gameOverPanel;\n    public Text gameOverScoreText;\n\n    private void Start()\n    {\n        gameOverPanel.SetActive(false);\n    }\n\n    public void UpdateScore(int score)\n    {\n        scoreText.text = $\"Score: {score}\";\n    }\n\n    public void ShowGameOver(int score)\n    {\n        gameOverPanel.SetActive(true);\n        gameOverScoreText.text = $\"Final Score: {score}\";\n    }\n}",
          "Scripts/AudioManager.cs": "using UnityEngine;\n\npublic class AudioManager : MonoBehaviour\n{\n    public AudioSource bgMusic;\n    public AudioSource sfxSource;\n    public AudioClip eatSound;\n    public AudioClip gameOverSound;\n\n    private void Start()\n    {\n        bgMusic.Play();\n    }\n\n    public void PlayEatSound()\n    {\n        sfxSource.PlayOneShot(eatSound);\n    }\n\n    public void PlayGameOverSound()\n    {\n        sfxSource.PlayOneShot(gameOverSound);\n    }\n}",
          "Scripts/GameConfig.cs": "using UnityEngine;\n\npublic class GameConfig : MonoBehaviour\n{\n    public float snakeSpeed = 0.1f;\n    public int scorePerFood = 1;\n    public GameObject segmentPrefab;\n    public Vector2Int gridSize = new Vector2Int(20, 20);\n}",
          "Scripts/Utility.cs": "using UnityEngine;\n\npublic static class Utility\n{\n    public static Vector2Int GetRandomGridPosition(Vector2Int gridSize)\n    {\n        return new Vector2Int(\n            Random.Range(0, gridSize.x),\n            Random.Range(0, gridSize.y)\n        );\n    }\n}",
          "Scripts/CameraController.cs": "using UnityEngine;\n\npublic class CameraController : MonoBehaviour\n{\n    public Transform target;\n    public Vector3 offset = new Vector3(0, 0, -10);\n\n    private void LateUpdate()\n    {\n        if (target)\n        {\n            transform.position = target.position + offset;\n        }\n    }\n}"
        },
      
    "3d-fps": {
      "index.html": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>{{gameName}}</title>\n  <style>\n    body { margin: 0; overflow: hidden; background: #000; }\n    #unity-container { width: 100vw; height: 100vh; }\n    #loading-screen { position: absolute; top: 0; left: 0; width: 100%; height: 100%; background: linear-gradient(45deg, #1a1a1a, #2a2a2a); display: flex; justify-content: center; align-items: center; color: #fff; font-family: Arial; animation: pulse 2s infinite; }\n    #loading-bar { width: 50%; height: 20px; background: #fff; transition: width 0.3s; }\n    @keyframes pulse { 0% { opacity: 1; } 50% { opacity: 0.8; } 100% { opacity: 1; } }\n  </style>\n</head>\n<body>\n  <div id=\"loading-screen\"><div id=\"loading-bar\"></div>Loading {{gameName}}...</div>\n  <div id=\"unity-container\"></div>\n  <script src=\"Build/UnityLoader.js\"></script>\n  <script>\n    const gameInstance = UnityLoader.instantiate(\"unity-container\", \"Build/game.json\", {\n      onProgress: (gameInstance, progress) => {\n        document.getElementById(\"loading-bar\").style.width = (progress * 100) + \"%\";\n        if (progress === 1) document.getElementById(\"loading-screen\").style.display = \"none\";\n      }\n    });\n  </script>\n</body>\n</html>",
      "Scenes/GameScene.unity": "scene: { objects: [ { name: \"MainCamera\", components: [ { type: \"Camera\" } ] }, { name: \"GameManager\", components: [ { type: \"GameManager\" } ] }, { name: \"Player\", components: [ { type: \"Rigidbody\", constraints: \"FreezeRotationX, FreezeRotationZ\" }, { type: \"CapsuleCollider\" } ] } ] }",
      "Scripts/UIManager.cs": "using UnityEngine;\nusing UnityEngine.UI;\npublic class UIManager : MonoBehaviour {\n  public Text healthText;\n  public GameObject gameOverPanel;\n  void Start() { gameOverPanel.SetActive(false); }\n  public void UpdateHealth(float health) { healthText.text = $\"Health: {health}\"; }\n  public void ShowGameOver() { gameOverPanel.SetActive(true); }\n}",
      "Scripts/AudioManager.cs": "using UnityEngine;\npublic class AudioManager : MonoBehaviour {\n  public AudioSource bgMusic;\n  public AudioSource sfxSource;\n  public AudioClip shootClip;\n  public AudioClip hitClip;\n  void Start() { bgMusic.Play(); }\n  public void PlayShootSound() { sfxSource.PlayOneShot(shootClip); }\n  public void PlayHitSound() { sfxSource.PlayOneShot(hitClip); }\n}",
      "Scripts/GameConfig.cs": "using UnityEngine;\npublic static class GameConfig {\n  public static float PlayerSpeed = 6f;\n  public static float BulletSpeed = 20f;\n  public static float EnemyHealth = 100f;\n}",
      "Scripts/Utility.cs": "using UnityEngine;\npublic static class Utility {\n  public static Quaternion GetLookRotation(Vector3 direction) {\n    return Quaternion.LookRotation(direction);\n  }\n  public static bool RaycastHit(Vector3 origin, Vector3 direction, float distance, out RaycastHit hit) {\n    return Physics.Raycast(origin, direction, out hit, distance);\n  }\n}",
      "Scripts/CameraController.cs": "using UnityEngine;\npublic class CameraController : MonoBehaviour {\n  public Transform target;\n  public Vector3 offset = new Vector3(0, 1.5f, -2);\n  public float sensitivity = 2f;\n  void LateUpdate() { if (target) transform.position = target.position + offset; transform.rotation = Quaternion.Euler(transform.eulerAngles.x + Input.GetAxis(\"Mouse Y\") * sensitivity, transform.eulerAngles.y + Input.GetAxis(\"Mouse X\") * sensitivity, 0); }\n}"
    },
    "3d-racing": {
      "index.html": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>{{gameName}}</title>\n  <style>\n    body { margin: 0; overflow: hidden; background: #000; }\n    #unity-container { width: 100vw; height: 100vh; }\n    #loading-screen { position: absolute; top: 0; left: 0; width: 100%; height: 100%; background: linear-gradient(45deg, #1a1a1a, #2a2a2a); display: flex; justify-content: center; align-items: center; color: #fff; font-family: Arial; animation: pulse 2s infinite; }\n    #loading-bar { width: 50%; height: 20px; background: #fff; transition: width 0.3s; }\n    @keyframes pulse { 0% { opacity: 1; } 50% { opacity: 0.8; } 100% { opacity: 1; } }\n  </style>\n</head>\n<body>\n  <div id=\"loading-screen\"><div id=\"loading-bar\"></div>Loading {{gameName}}...</div>\n  <div id=\"unity-container\"></div>\n  <script src=\"Build/UnityLoader.js\"></script>\n  <script>\n    const gameInstance = UnityLoader.instantiate(\"unity-container\", \"Build/game.json\", {\n      onProgress: (gameInstance, progress) => {\n        document.getElementById(\"loading-bar\").style.width = (progress * 100) + \"%\";\n        if (progress === 1) document.getElementById(\"loading-screen\").style.display = \"none\";\n      }\n    });\n  </script>\n</body>\n</html>",
      "Scenes/GameScene.unity": "scene: { objects: [ { name: \"MainCamera\", components: [ { type: \"Camera\" } ] }, { name: \"GameManager\", components: [ { type: \"GameManager\" } ] }, { name: \"PlayerCar\", components: [ { type: \"Rigidbody\", constraints: \"FreezeRotationX, FreezeRotationZ\" }, { type: \"BoxCollider\" } ] }, { name: \"Track\", components: [ { type: \"MeshRenderer\" }, { type: \"MeshCollider\" } ] } ] }",
      "Scripts/UIManager.cs": "using UnityEngine;\nusing UnityEngine.UI;\npublic class UIManager : MonoBehaviour {\n  public Text speedText;\n  public Text lapText;\n  public GameObject raceFinishPanel;\n  void Start() { raceFinishPanel.SetActive(false); }\n  public void UpdateSpeed(float speed) { speedText.text = $\"Speed: {speed:F1} km/h\"; }\n  public void UpdateLap(int lap, int totalLaps) { lapText.text = $\"Lap: {lap}/{totalLaps}\"; }\n  public void ShowRaceFinish() { raceFinishPanel.SetActive(true); }\n}",
      "Scripts/AudioManager.cs": "using UnityEngine;\npublic class AudioManager : MonoBehaviour {\n  public AudioSource engineSound;\n  public AudioSource sfxSource;\n  public AudioClip crashClip;\n  public AudioClip checkpointClip;\n  void Start() { engineSound.Play(); }\n  public void PlayCrashSound() { sfxSource.PlayOneShot(crashClip); }\n  public void PlayCheckpointSound() { sfxSource.PlayOneShot(checkpointClip); }\n}",
      "Scripts/GameConfig.cs": "using UnityEngine;\npublic static class GameConfig {\n  public static float CarSpeed = 50f;\n  public static float TurnSpeed = 90f;\n  public static int TotalLaps = 3;\n}",
      "Scripts/Utility.cs": "using UnityEngine;\npublic static class Utility {\n  public static Vector3 GetTrackPosition(Vector3 current, Vector3 forward, float speed) {\n    return current + forward * speed * Time.deltaTime;\n  }\n  public static bool IsOnTrack(Collider collider, string trackTag) {\n    return collider.CompareTag(trackTag);\n  }\n}",
      "Scripts/CameraController.cs": "using UnityEngine;\npublic class CameraController : MonoBehaviour {\n  public Transform target;\n  public Vector3 offset = new Vector3(0, 5f, -10f);\n  public float smoothSpeed = 0.125f;\n  void LateUpdate() { if (target) { Vector3 desiredPosition = target.position + target.rotation * offset; transform.position = Vector3.Lerp(transform.position, desiredPosition, smoothSpeed); transform.LookAt(target); } }\n}"
    }
  }